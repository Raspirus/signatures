#!/bin/python
from modules.downloader import Downloader
import requests
from zipfile import ZipFile
import os
import io

class MalwareBazaar(Downloader):
	def __init__(self,):
		super().__init__("MalwareBazaar", "https://bazaar.abuse.ch/export/txt/md5/full/")
	def download(self): # TODO: Maybe add a "force" option to always redownload the list?
		r = requests.get(self.url)
		zipdata = io.BytesIO(r.content)
		with ZipFile(zipdata, 'r') as zipfile:
			zipfile.extractall()
	def readHashFile(self):
		self.outFileModified = 0
		try:
			with open(f"raspirus_{'%03d' % self.fileNum}.md5", 'r') as f:
				lines = f.readlines()
				self.md5 = [int(x, 16) for x in lines]
		except FileNotFoundError:
			with open(f"raspirus_{'%03d' % self.fileNum}.md5", 'w') as f:
				pass
			self.md5 = []

	def loadHashes(self):
		bazaarFile = open("full_md5.txt", 'r')
		bazaarFile.seek(0x1dd) # Skip header
		self.lines = bazaarFile.readlines()[:-1] # Skips the last line because it contains the hash count, not a hash
